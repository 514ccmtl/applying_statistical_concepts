16 + 15 + 23
library(ISLR2)
attach(Auto)
lm.fit < lm(mpg ~ horsepower)
lm.pred <- predict(lm.fit, Augo)
library(ISLR2)
library(boot)
attach(Auto)
lm.fit < lm(mpg ~ horsepower)
lm.pred <- predict(lm.fit, Augo)
lm.fit < lm(mpg ~ horsepower, data=Auto)
lm.pred <- predict(lm.fit, Auto)
names(Auto)
lm.fit < lm(mpg ~ horsepower, data=Auto)
library(ISLR2)
library(boot)
attach(Auto)
lm.fit < lm(mpg ~ horsepower, data=Auto)
df <- Auto
lm.fit < lm(mpg ~ horsepower, data=df)
str(Auto)
train <- sample(392, 196)
library(ISLR2)
library(boot)
#load the library
library(boot)
#get the data
attach(swiss)
glm.fit <- glm(Fertility ~ ., data=swiss)
#OR
glm.fit <- glm(Fertility ~ ., data=swiss)
lm.fit < lm(Fertility ~ .,, data=swiss)
lm.fit < lm(Fertility ~ ., data=swiss)
#code here
attach(iris)
#custom function for boot library
my_func <- function(data, index){
mean(data$Petal.Length[index])
}
#load library
library(boot)
#set seed
set.seed(123)
#boot function
(myboot <- boot(iris, my_func, R=10000))
#code here
sd(myboot$t)
#code here
boot.ci(myboot, type='norm')
#code here
plot(myboot)
#load the library
library(boot)
#get the data
attach(swiss)
#explore dataset
str(swiss)
#code here
glm.fit <- glm(Fertility ~ ., data=swiss)
#load libraries
library(ISLR2)
library(boot)
library(faraway)
#get the data
attach(swiss)
#git model
lm.fit < lm(Fertility ~ ., data=swiss)
lm.pred <- predict(lm.fit, data=swiss)
#git model
lmod <- lm(Fertility ~ ., swiss);
lm.fit <- lm(Fertility ~ ., swiss)
lm.pred <- predict(lm.fit, data=swiss)
#OR
glm.fit <- glm(Fertility ~ ., data=swiss)
#calculate MSE
glm.fit$residuals^2/(n-p)
#calculate MSE
n <- nrow(swiss)
glm.fit$residuals^2/(n)
glm.fit$residuals
#code here
attach(iris)
#custom function for boot library
my_func <- function(data, index){
mean(data$Petal.Length[index])
}
#load library
library(boot)
#set seed
set.seed(123)
#boot function
(myboot <- boot(iris, my_func, R=10000))
#code here
sd(myboot$t)
#code here
boot.ci(myboot, type='norm')
#code here
plot(myboot)
#load the library
library(boot)
#get the data
attach(swiss)
#explore dataset
str(swiss)
#code here
glm.fit <- glm(Fertility ~ ., data=swiss)
#code here
cv.error <- cv.glm(swiss, glm.fit)
#code here
cv.error$delta[1]
glm.fit$residuals
sum(glm.fit$residuals ^2)
sum(glm.fit$residuals ^2) / (nrow(swiss)
)
mean(glm.fit$residuals^2)
glm.fit$residuals^2/(n)
sum(glm.fit$residuals^2)/(n)
#or
mean(glm.fit$residuals^2)
